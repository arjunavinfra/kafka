
apiVersion: v1
kind: Namespace
metadata:
  labels:
    kubernetes.io/metadata.name: kafka2
  name: kafka2
---
apiVersion: v1
kind: Service
metadata:
  name: kafka-svc
  namespace: kafka2
  labels:
    app: kafka-app2
spec:
  clusterIP: None
  ports:
    - name: '9092'
      port: 9092
      protocol: TCP
      targetPort: 9092
  selector:
    app: kafka-app2
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: kafka
  namespace: kafka2
  labels:
    app: kafka-app2
spec:
  serviceName: kafka-svc
  replicas: 3
  selector:
    matchLabels:
      app: kafka-app2
  template:
    metadata:
      labels:
        app: kafka-app2
    spec:
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: topology.kubernetes.io/zone
          whenUnsatisfiable: DoNotSchedule
          labelSelector:
            matchLabels:
              app: kafka-app2
      containers:
        - name: kafka-container
          image: doughgle/kafka-kraft
          ports:
            - containerPort: 9092
            - containerPort: 9093
          env:
            - name: REPLICAS
              value: '3'
            - name: SERVICE
              value: kafka-svc
            - name: NAMESPACE
              value: kafka2
            - name: SHARE_DIR
              value: /mnt/kafka
            - name: CLUSTER_ID
              value: 04g8jszSQXKK_o_MZrTEKQ
            - name: DEFAULT_REPLICATION_FACTOR
              value: '1'
            - name: DEFAULT_MIN_INSYNC_REPLICAS
              value: '1'
          volumeMounts:
            - name: data
              mountPath: /mnt/kafka
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes:
          - "ReadWriteOnce"
        resources:
          requests:
            storage: "1Gi"

